{"version":3,"file":"Thunk.js","sourceRoot":"","sources":["../modules/Thunk.ts"],"names":[],"mappings":";AAqBA;IASE,YAAY,KAAY;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,EAAE,SAAS,EAAC,KAAK,EAAE,CAAC;IACrC,CAAC;IACD,OAAO;QACL,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG;gBACb,SAAS,EAAG,IAAI;gBAChB,KAAK,EAAG,IAAI,CAAC,OAAO,EAAE;aACvB,CAAC;QACJ,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;IAC5B,CAAC;IACD,GAAG,CAAI,CAAY;QACjB,MAAM,CAAC,IAAI,KAAK,CAAC;YACf,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,EAAE,CAAI,GAAM;QACV,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACvB,CAAC;IACD,OAAO,CAAI,CAAmB;QAC5B,MAAM,CAAC,IAAI,KAAK,CAAC;YACf,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QACrC,CAAC,CAAC,CAAA;IACJ,CAAC;IACD,OAAO;QACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAI,CAAI,KAAK,CAAC,CAAC,CAAA;IACrC,CAAC;;AAhCM,QAAE,GAAG,UAAa,GAAM;IAC7B,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9B,CAAC,CAAA;;AAPH,wBAsCC","sourcesContent":["export interface Monad<T> {\n\n  flatMap<U>(f: (t: T) => Monad<U>): Monad<U>;\n\n  of<U>(t: U): Monad<U>;\n\n}\nexport interface Functor<T> {\n\n  map<U>(f: (t: T) => U): Functor<U>;\n\n}\n\ninterface Evaluated<T> {\n  evaluated: true,\n  value : T\n}\ninterface Unevaluated<T> {\n  evaluated: false\n}\n\nexport default class Thunk<T> implements Functor<T>, Monad<T> {\n\n  private __value: ()=>T;\n  private __cache: Evaluated<T> | Unevaluated<T>;\n\n  static of = function <T>(val: T): Thunk<T> {\n    return new Thunk(() => val);\n  }\n\n  constructor(value: ()=>T) {\n    this.__value = value;\n    this.__cache = { evaluated:false };\n  }\n  valueOf(): T {\n    if (!this.__cache.evaluated) {\n      this.__cache = {\n        evaluated : true,\n        value : this.__value()\n      };\n    }\n    return this.__cache.value;\n  }\n  map<U>(f: (t: T)=>U) {\n    return new Thunk(() => {\n      return f(this.valueOf());\n    });\n  }\n  of<T>(val: T) {\n    return Thunk.of(val);\n  }\n  flatMap<U>(f: (t: T)=>Thunk<U>) {\n    return new Thunk(() => {\n      return f(this.valueOf()).valueOf();\n    })\n  }\n  flatten() {\n    return this.flatMap(<T>(x: T) => x)\n  }\n}"]}