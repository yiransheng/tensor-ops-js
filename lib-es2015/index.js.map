{"version":3,"file":"index.js","sourceRoot":"","sources":["../modules/index.ts"],"names":[],"mappings":";AAAA,mCAMiB;AAEjB,mCAA2B;AAC3B,qCAA8B;AAE9B,gBAA2B,KAAmB;IAC5C,MAAM,KAAK,GAAG,IAAI,eAAK,CAAC;QACtB,MAAM,CAAC,oBAAY,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,IAAI,gBAAM,CAAC,KAAK,EAAE,mBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,CAAC;AALD,wBAKC;AAED,iBAA4B,KAAmB,EAAE,KAAW;IAC1D,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;AAC/C,CAAC;AAFD,0BAEC;AAED,mBAA8B,KAAmB,EAAE,IAAW;IAC5D,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;AAChD,CAAC;AAFD,8BAEC;;AAED,kBAAe,gBAAM,CAAC","sourcesContent":["import {\n  deriveShape,\n  flattenArray,\n\n  Shape,\n  DeepArray\n} from './utils';\n\nimport Thunk from './Thunk'\nimport Tensor from './Tensor';\n\nexport function tensor <T>(array: DeepArray<T>): Tensor<T> {\n  const thunk = new Thunk(() => {\n    return flattenArray(array);\n  });\n  return new Tensor(thunk, deriveShape(array));\n}\n\nexport function reshape <T>(array: DeepArray<T>, shape:Shape): DeepArray<T> {\n  return tensor(array).reshape(shape).tolist();\n}\n\nexport function transpose <T>(array: DeepArray<T>, dims?:Shape): DeepArray<T> {\n  return tensor(array).transpose(dims).tolist();\n}\n\nexport default Tensor;"]}